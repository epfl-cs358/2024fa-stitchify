{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Content from\"./components/Content\";import\"../createPatternStyles.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getAction=(action,direction)=>{if(action===\"skip\"){return direction===\"right\"?\"rs\":\"ls\";}else if(action===\"take\"){return direction===\"right\"?\"rt\":\"lt\";}else{return direction===\"right\"?\"fr\":\"fl\";}};const convertGridToPattern=grid=>{const commands=[];let direction=\"left\";grid.forEach(row=>{let prevAction=row[0]===0?\"take\":\"skip\";let count=0;row.forEach(cell=>{const currentAction=cell===0?\"take\":\"skip\";if(currentAction===prevAction){count+=1;}else{commands.push(\"\".concat(getAction(prevAction,direction),\" \").concat(count));prevAction=currentAction;count=1;}});commands.push(\"\".concat(getAction(prevAction,direction),\" \").concat(count));const maxN=direction===\"right\"?2500:-2500;commands.push(\"n \".concat(maxN));direction=direction===\"right\"?\"left\":\"right\";});return commands.join(\"\\n\");};const downloadPattern=patternString=>{const blob=new Blob([patternString],{type:\"text/plain\"});const url=URL.createObjectURL(blob);const link=document.createElement(\"a\");link.href=url;link.download=\"pattern.txt\";link.click();URL.revokeObjectURL(url);};const CreatePattern=_ref=>{let{handleOwnPatternClick}=_ref;const[grid,setGrid]=useState([]);const[cols,setCols]=useState(19);const[rows,setRows]=useState(20);const[windowSize,setWindowSize]=useState({width:window.innerWidth,height:window.innerHeight});useEffect(()=>{const initialGrid=Array.from({length:rows},()=>Array(cols).fill(0));setGrid(initialGrid);},[rows,cols]);useEffect(()=>{const handleResize=()=>{setWindowSize({width:window.innerWidth,height:window.innerHeight});};window.addEventListener(\"resize\",handleResize);return()=>window.removeEventListener(\"resize\",handleResize);},[]);const calculateGridCellSize=()=>{const containerWidth=Math.min(windowSize.width*0.7,400);// Limit the container width to 400px\nconst cellSize=Math.min(containerWidth/cols);return\"\".concat(Math.floor(cellSize),\"px\");};const toggleCellState=(rowIndex,colIndex)=>{const updatedGrid=grid.map((row,i)=>i===rowIndex?row.map((cell,j)=>j===colIndex?cell===0?1:0:cell):row);setGrid(updatedGrid);generateAndStorePattern(updatedGrid);};const generateAndStorePattern=grid=>{const patternString=convertGridToPattern(grid);handleOwnPatternClick(patternString);};const handleDownload=()=>{const patternString=convertGridToPattern(grid);downloadPattern(patternString);};const handleRowChange=e=>{const newRows=parseInt(e.target.value,10);setRows(newRows);};return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(Content,{title:\"Create Your Pattern\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto bg-white p-12 rounded-2xl shadow-2xl\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700 mb-6 leading-relaxed text-lg\",children:\"With our easy-to-use grid interface, you can quickly design your own knitting patterns. Each cell in the grid represents a stitch, allowing you to create detailed motifs and repeats. Blue cells represent skipped needles, giving you control over where the knitting machine will not make a stitch.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"rowCount\",children:\"Rows: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"rowCount\",value:rows,onChange:handleRowChange,min:1,max:100,style:{marginLeft:\"10px\"}})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"grid-container\",style:{display:\"grid\",justifyContent:\"center\",gridTemplateColumns:\"repeat(\".concat(cols,\", 1fr)\"),gridTemplateRows:\"repeat(\".concat(rows,\", 1fr)\"),margin:\"0 auto\",maxWidth:\"400px\"},children:grid.map((row,rowIndex)=>row.map((cell,colIndex)=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>toggleCellState(rowIndex,colIndex),className:\"grid-cell \".concat(cell===1?\"ticked\":\"\"),style:{width:calculateGridCellSize(),height:calculateGridCellSize()}},\"\".concat(rowIndex,\"-\").concat(colIndex))))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDownload,className:\"download-btn\",children:\"Download Pattern\"})]});};export default CreatePattern;","map":{"version":3,"names":["React","useState","useEffect","Content","jsx","_jsx","jsxs","_jsxs","getAction","action","direction","convertGridToPattern","grid","commands","forEach","row","prevAction","count","cell","currentAction","push","concat","maxN","join","downloadPattern","patternString","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","CreatePattern","_ref","handleOwnPatternClick","setGrid","cols","setCols","rows","setRows","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","initialGrid","Array","from","length","fill","handleResize","addEventListener","removeEventListener","calculateGridCellSize","containerWidth","Math","min","cellSize","floor","toggleCellState","rowIndex","colIndex","updatedGrid","map","i","j","generateAndStorePattern","handleDownload","handleRowChange","e","newRows","parseInt","target","value","style","textAlign","children","title","className","htmlFor","id","onChange","max","marginLeft","display","justifyContent","gridTemplateColumns","gridTemplateRows","margin","maxWidth","onClick"],"sources":["/Users/bogdancirje/Desktop/webapp/src/pages/CreatePattern.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Content from \"./components/Content\";\nimport \"../createPatternStyles.css\";\n\nconst getAction = (action, direction) => {\n  if (action === \"skip\") {\n    return direction === \"right\" ? \"rs\" : \"ls\";\n  } else if (action === \"take\") {\n    return direction === \"right\" ? \"rt\" : \"lt\";\n  } else {\n    return direction === \"right\" ? \"fr\" : \"fl\";\n  }\n};\n\nconst convertGridToPattern = (grid) => {\n  const commands = [];\n  let direction = \"left\";\n\n  grid.forEach((row) => {\n    let prevAction = row[0] === 0 ? \"take\" : \"skip\";\n    let count = 0;\n\n    row.forEach((cell) => {\n      const currentAction = cell === 0 ? \"take\" : \"skip\";\n      if (currentAction === prevAction) {\n        count += 1;\n      } else {\n        commands.push(`${getAction(prevAction, direction)} ${count}`);\n        prevAction = currentAction;\n        count = 1;\n      }\n    });\n    commands.push(`${getAction(prevAction, direction)} ${count}`);\n\n    const maxN = direction === \"right\" ? 2500 : -2500;\n    commands.push(`n ${maxN}`);\n    direction = direction === \"right\" ? \"left\" : \"right\";\n  });\n\n  return commands.join(\"\\n\");\n};\n\nconst downloadPattern = (patternString) => {\n  const blob = new Blob([patternString], { type: \"text/plain\" });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.download = \"pattern.txt\";\n  link.click();\n  URL.revokeObjectURL(url);\n};\n\nconst CreatePattern = ({ handleOwnPatternClick }) => {\n  const [grid, setGrid] = useState([]);\n  const [cols, setCols] = useState(19);\n  const [rows, setRows] = useState(20);\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const initialGrid = Array.from({ length: rows }, () => Array(cols).fill(0));\n    setGrid(initialGrid);\n  }, [rows, cols]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const calculateGridCellSize = () => {\n    const containerWidth = Math.min(windowSize.width * 0.7, 400); // Limit the container width to 400px\n    const cellSize = Math.min(containerWidth / cols);\n    return `${Math.floor(cellSize)}px`;\n  };\n\n  const toggleCellState = (rowIndex, colIndex) => {\n    const updatedGrid = grid.map((row, i) =>\n      i === rowIndex\n        ? row.map((cell, j) => (j === colIndex ? (cell === 0 ? 1 : 0) : cell))\n        : row\n    );\n    setGrid(updatedGrid);\n    generateAndStorePattern(updatedGrid);\n  };\n\n  const generateAndStorePattern = (grid) => {\n    const patternString = convertGridToPattern(grid);\n    handleOwnPatternClick(patternString);\n  };\n\n  const handleDownload = () => {\n    const patternString = convertGridToPattern(grid);\n    downloadPattern(patternString);\n  };\n\n  const handleRowChange = (e) => {\n    const newRows = parseInt(e.target.value, 10);\n    setRows(newRows);\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <Content title=\"Create Your Pattern\">\n        <div className=\"max-w-4xl mx-auto bg-white p-12 rounded-2xl shadow-2xl\">\n          <p className=\"text-gray-700 mb-6 leading-relaxed text-lg\">\n            With our easy-to-use grid interface, you can quickly design your own\n            knitting patterns. Each cell in the grid represents a stitch,\n            allowing you to create detailed motifs and repeats. Blue cells\n            represent skipped needles, giving you control over where the\n            knitting machine will not make a stitch.\n          </p>\n          <div className=\"row-selector\">\n            <label htmlFor=\"rowCount\">Rows: </label>\n            <input\n              type=\"number\"\n              id=\"rowCount\"\n              value={rows}\n              onChange={handleRowChange}\n              min={1}\n              max={100}\n              style={{ marginLeft: \"10px\" }}\n            />\n          </div>\n        </div>\n      </Content>\n\n      <div\n        className=\"grid-container\"\n        style={{\n          display: \"grid\",\n          justifyContent: \"center\",\n          gridTemplateColumns: `repeat(${cols}, 1fr)`,\n          gridTemplateRows: `repeat(${rows}, 1fr)`,\n          margin: \"0 auto\",\n          maxWidth: \"400px\",\n        }}\n      >\n        {grid.map((row, rowIndex) =>\n          row.map((cell, colIndex) => (\n            <div\n              key={`${rowIndex}-${colIndex}`}\n              onClick={() => toggleCellState(rowIndex, colIndex)}\n              className={`grid-cell ${cell === 1 ? \"ticked\" : \"\"}`}\n              style={{\n                width: calculateGridCellSize(),\n                height: calculateGridCellSize(),\n              }}\n            ></div>\n          ))\n        )}\n      </div>\n\n      <button onClick={handleDownload} className=\"download-btn\">\n        Download Pattern\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePattern;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}